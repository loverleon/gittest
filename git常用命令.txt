			创建版本库

创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：
$mkdir learngit
$cd learngit
$pwd
pwd 命令用于显示当前目录

第二步，通过git init 命令把这个目录变化才能Git可以管理的仓库：
$git init



小结

现在总结一下今天学的两点内容：

初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

	第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

	第二步，使用命令git commit，完成。



			版本回退

小结
现在总结一下：

	HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

	穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

	要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。



			工作区和暂存区
工作区：
	就是在电脑上能看到的目录，比如新建的learngit文件夹就是一个工作区；

版本库：
	工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库

	git版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。

前面讲了我们把文件往git版本库里添加的时候，是分两步执行的：
	
	第一步使用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
  
	第二步使用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

$git status 可以查看状态



			管理修改

提交后，用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别；

现在，你又理解了Git是如何跟踪修改的，每次修改，如果不add到暂存区，那就不会加入到commit中。



			撤销修改

又到了小结时间。

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。


			删除文件


小结
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。	